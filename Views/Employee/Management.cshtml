@{
    ViewBag.Title = "Employee Management";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Management</title>
    <link rel="stylesheet" href="~/css/employee-management.css" />
    <link rel="stylesheet" href="@Url.Content("~/css/payroll-info.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/employee-management.css")" />
</head>
<body>

    <!-- Header Section -->
    <div class="header">
        <div class="logo-container">
            <div class="hr-logo"></div>
        </div>
        <h2 class="welcome-text">Employee Management</h2>
        <h2 class="heading">SparkLine</h2>
    </div>

    <div class="content-wrapper">
        <!-- Sidebar Container -->
        <div class="sidebar-container">
            <div class="sidebar">
                <h2>Management</h2>
                <ul class="sidebar-menu">
                    <li><a asp-controller="Home" asp-action="MainDashboard">Dashboard</a></li>
                    <li><a asp-controller="Employee" asp-action="Management">Employee Management</a></li>
                    <li><a asp-controller="Attendance" asp-action="Index">Requests</a></li>
                    <li><a asp-controller="Analytics" asp-action="Index">Analytics</a></li>
                    <li><a asp-controller="Employee" asp-action="Details">Onboarding</a></li>
                    <li><a asp-controller="PerformanceReviews" asp-action="CreateReview">Performance</a></li>
                    <li><a href="#" onclick="confirmLogout()">Logout</a></li>
                </ul>
            </div>
        </div>

        <!-- Aslam Updated -->
        <!-- Main Content with Tabs -->
        <div class="main-content">
            <div class="tabs">
                <div class="tab-link active" data-tab="employee-list">Employee List</div>
                <div class="tab-link" data-tab="previous-employees">Previous Employees</div>
                <div class="tab-link" data-tab="payslips">Release Payslips</div>
                <!--Anjali add this line -->
                <div class="tab-link" data-tab="view-incident">View Incident</div>
            </div>

            <!-- Aslam Updated -->
            <!-- Employee List Content -->
            <div class="tab-content" id="employee-list" style="display:block;">
                <!-- Employee List Heading -->
                <h3 class="employee-list-heading">Employee List</h3>

                <!-- Employee Table -->
                <table class="employee-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Job Title</th>
                            <th>Department</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var emp in Model)
                        {
                            <tr>
                                <td>@emp.employee.Name</td>
                                <td>@emp.jobdetails.JobTitle</td>
                                <td>@emp.jobdetails.Department</td>
                                <td><span class="status active">Active</span></td>
                                <td>
                                    <div style="display: flex; gap: 10px;">
                                        <a asp-controller="Employee" asp-action="EmployeeDetails" asp-route-id="@emp.empID" class="btn btn-primary">Edit</a>
                                        <button class="remove-btn btn btn-danger" onclick="removeEmployee(this)">Remove</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
              
            </div>

            <!-- Aslam Updated -->
            <!-- Previous Employees Content -->
            <div class="tab-content" id="previous-employees" style="display:none;">
                <h3>Previous Employees</h3>
                <table class="employee-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Role</th>
                            <th>Dept</th>
                            <th>Status</th>
                            <th>Termination Date</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="previousEmployeesTable">
                        <!-- Removed employees will appear here -->
                    </tbody>
                </table>
            </div>

            <!-- Payslips Content -->
            <div class="tab-content" id="payslips" style="display:none;">
                <h3>Release Payslips</h3>

                <!-- Employee Selection -->
                <div class="form-group">
                    <label for="employeeDropdown">Select Employee:</label>
                    <select id="employeeDropdown" class="form-control">
                        <option value="" selected disabled>Select an Employee</option>
                    </select>
                </div>

                <!-- Payslip Table -->
                <div id="payslipSection" style="display:none;">
                    <table class="table table-striped" id="payslipTable">
                        <thead>
                            <tr>
                                <th>Month</th>

                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>

            <div class="tab-content" id="view-incident" style="display:none;">
                <h3 class="incident-list-heading">Incident Reports</h3>
                <!-- Incident Table -->
                <table class="incident-table">
                    <thead>
                        <tr>
                            <th>Employee Number</th>
                            <th>Incident Title</th>
                            <th>Description</th>
                            <th>Date Submitted</th>
                            <th>Actions</th>

                        </tr>
                    </thead>
                    <tbody>
                        <!-- Populated dynamically via JavaScript -->
                    </tbody>
                </table>
            </div>


        </div>

        <style>
            /* Style the table container */
            .incident-table {
                width: 100%;
                border-collapse: collapse;
                margin: 20px 0;
                font-size: 16px;
                text-align: left;
            }

                /* Table header styling */
                .incident-table thead tr {
                    background-color: #f2f2f2;
                    color: #333;
                    text-transform: uppercase;
                    font-weight: bold;
                }

                /* Table row styling */
                .incident-table tbody tr {
                    border-bottom: 1px solid #ddd;
                }

                    /* Hover effect for rows */
                    .incident-table tbody tr:hover {
                        background-color: #f9f9f9;
                    }

                /* Cell padding */
                .incident-table th, .incident-table td {
                    padding: 12px 15px;
                }

                /* Alternate row colors */
                .incident-table tbody tr:nth-of-type(even) {
                    background-color: #f8f8f8;
                }

                /* Adjust column widths */
                .incident-table td:nth-child(1) {
                    width: 15%;
                }

                .incident-table td:nth-child(2) {
                    width: 25%;
                }

                .incident-table td:nth-child(3) {
                    width: 40%;
                }

                .incident-table td:nth-child(4) {
                    width: 20%;
                }
        </style>
        <!-- Confirm Logout script -->
        <script>

            // incident Reports functions
            function fetchIncidentReports() {
                console.log("Fetching incident reports...");
                $.ajax({
                    url: '@Url.Action("GetIncidentReports", "Employee")',
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            populateIncidentTable(response.data);
                        } else {
                            alert('Failed to fetch incident reports: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while fetching incident reports.');
                    }
                });
            }

            function populateIncidentTable(incidentReports) {
                const tableBody = $('.incident-table tbody');
                tableBody.empty(); // Clear existing rows

                incidentReports.forEach(report => {
                    const row = `
                        <tr>
                            <td>${report.employeeNumber}</td>
                            <td>${report.title}</td>
                            <td>${report.description}</td>
                            <td>${report.dateSubmitted}</td>
                            <td>
                                <button class="btn btn-danger close-incident-btn" data-employee="${report.employeeNumber}" data-date="${report.dateSubmitted}">
                                    Close
                                </button>
                            </td>
                        </tr>
                    `;
                    tableBody.append(row);
                });

                // Attach event listener for the "Close" buttons
                $('.close-incident-btn').on('click', function () {
                    const employeeNumber = $(this).data('employee');
                    const dateSubmitted = $(this).data('date');
                    closeIncident(employeeNumber, dateSubmitted);
                });
            }


            function closeIncident(employeeNumber, dateSubmitted) {
                if (confirm('Are you sure you want to close this incident?')) {
                    $.ajax({
                        url: '@Url.Action("CloseIncident", "Employee")',
                        type: 'POST',
                        data: { employeeNumber: employeeNumber, dateSubmitted: dateSubmitted },
                        success: function (response) {
                            if (response.success) {
                                alert('Incident closed successfully.');
                                fetchIncidentReports(); // Refresh the table
                            } else {
                                alert('Failed to close the incident: ' + response.message);
                            }
                        },
                        error: function () {
                            alert('An error occurred while closing the incident.');
                        }
                    });
                }
            }


            // Call fetchIncidentReports on page load
            $(document).ready(function () {
                fetchIncidentReports();
            });



            function confirmLogout() {
                if (confirm("Are you sure you want to log out?")) {
                    window.location.href = '@Url.Action("Logout", "Account")'; // Adjust this path as needed
                }
            }

            // Tab switching logic
            document.addEventListener("DOMContentLoaded", function () {
                const tabLinks = document.querySelectorAll(".tab-link");
                const tabContents = document.querySelectorAll(".tab-content");

                tabLinks.forEach(link => {
                    link.addEventListener("click", function () {
                        const tabId = this.getAttribute("data-tab");

                        // Hide all tab content
                        tabContents.forEach(content => content.style.display = "none");

                        // Remove active class from all tabs
                        tabLinks.forEach(tab => tab.classList.remove("active"));

                        // Show the selected tab content
                        document.getElementById(tabId).style.display = "block";

                        // Add active class to the clicked tab
                        this.classList.add("active");
                    });
                });
            });

            //Aslam Updated

            // Function to remove an employee and add to previous employees
            function removeEmployee(button) {
                const row = button.closest("tr");
                const employeeTable = document.getElementById("previousEmployeesTable");

                // Get current date for termination
                const terminationDate = new Date().toLocaleDateString();

                // Change status to "Removed" for previous employee table
                row.querySelector(".status").textContent = "Removed";

                // Remove the 'Remove' button in the row and add "Rehire" button
                const actionCell = row.querySelector("td:last-child");
                actionCell.innerHTML = '<button class="rehire-btn" onclick="rehireEmployee(this)">Rehire</button>';

                // Add the termination date to the new cell
                const terminationDateCell = document.createElement("td");
                terminationDateCell.textContent = terminationDate;
                row.insertBefore(terminationDateCell, actionCell);

                // Move row to Previous Employees
                employeeTable.appendChild(row);
            }

            //Aslam Updated

            // Function to rehire an employee
            function rehireEmployee(button) {
                const row = button.closest("tr");
                const employeeListTable = document.getElementById("employeeListTable");

                // Remove the termination date cell
                row.removeChild(row.querySelector("td:nth-last-child(2)")); // Adjust to match "Termination Date" position

                // Update the status to "Active"
                row.querySelector(".status").textContent = "Active";

                // Replace "Rehire" button with "Edit" and "Remove" buttons
                const actionCell = row.querySelector("td:last-child");
                actionCell.innerHTML = '<button class="edit-btn">Edit</button> <button class="remove-btn" onclick="removeEmployee(this)">Remove</button>';

                // Move the row back to the Employee List
                employeeListTable.appendChild(row);
            }

            // Payslip stuff
            $(document).ready(function () {
                // Initialize employees for dropdown on page load
                fetchEmployees();

                // Populate payslip months when an employee is selected
                $('#employeeDropdown').change(function () {
                    const empID = $(this).val();
                    if (empID) {
                        fetchPayslipData(empID);
                    }
                });
            });

            function fetchEmployees() {
                $.ajax({
                    url: '@Url.Action("GetEmployees", "Employee")',
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            const dropdown = $('#employeeDropdown');
                            dropdown.empty().append('<option value="" selected disabled>Select an Employee</option>');

                            response.data.forEach(emp => {
                                //console.log(emp); // Log each employee object
                                dropdown.append(`<option value="${emp.empID}">${emp.empID} - ${emp.name}</option>`);
                            });
                        }
                    },
                    error: function () {
                        alert('Failed to fetch employee data.');
                    }
                });
            }

            function fetchPayslipData(empID) {
                console.log("Fetching payslip data for employee:", empID);

                $.ajax({
                    url: '@Url.Action("GetEmployeeDetails", "Employee")',
                    type: 'GET',
                    data: { empID: empID },
                    success: function (response) {
                        console.log("API Response Data:", response);

                        if (response.success) {
                            const hireDate = new Date(response.data); // Parse the hire date
                            console.log("Parsed Hire Date:", hireDate);

                            const currentDate = new Date();
                            console.log("Current Date:", currentDate);

                            const tableBody = $('#payslipTable tbody');
                            tableBody.empty();

                            // Ensure the hireDate is always the 25th of the month
                            hireDate.setDate(25);
                            console.log("Adjusted Hire Date (25th of Hire Month):", hireDate);

                            // Ensure the current date is the 25th of the current month for comparison
                            let tempDate = new Date(currentDate);
                            tempDate.setDate(25);

                            // Loop in reverse: current date back to the hire date
                            while (tempDate >= hireDate) {
                                // Skip the current month if today's date is before the 25th
                                if (tempDate.getFullYear() === currentDate.getFullYear() &&
                                    tempDate.getMonth() === currentDate.getMonth() &&
                                    currentDate.getDate() < 25) {
                                    console.log("Skipping current month because today is before the 25th.");
                                    tempDate.setMonth(tempDate.getMonth() - 1);
                                    continue;
                                }

                                const monthYear = tempDate.toLocaleString('default', { month: 'long', year: 'numeric' });
                                console.log("Month-Year being added:", monthYear);

                                // Append the current month to the table
                                tableBody.append(`
                                    <tr>
                                        <td>${monthYear}</td>
                                        <td>
                                            <button class="btn btn-primary" onclick="releasePayslip('${empID}', '${monthYear}')">Release Payslip</button>
                                        </td>
                                    </tr>
                                `);

                                // Move to the previous month
                                tempDate.setMonth(tempDate.getMonth() - 1);
                            }

                            $('#payslipSection').show(); // Show the payslip section after populating
                        } else {
                            console.error("Error in response data:", response);
                            alert('Failed to fetch employee details.');
                        }
                    },
                    error: function () {
                        alert('An error occurred while fetching payslip data.');
                    }
                });
            }



            function releasePayslip(empID, monthYear) {
                console.log("Releasing payslip for:", empID, monthYear);

                $.ajax({
                    url: '@Url.Action("ReleasePayslip", "Employee")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ empID: empID, monthYear: monthYear }),
                    success: function (response) {
                        if (response.success) {
                            alert(`Payslip for ${monthYear} released successfully!`);
                            fetchPayslipData(empID); // Refresh payslip data
                        } else if (response.message === "Payslip already exists") {
                            alert(`Payslip for ${monthYear} has already been released.`);
                        } else {
                            alert('Failed to release payslip.');
                        }
                    },
                    error: function () {
                        alert('An error occurred while releasing the payslip.');
                    }
                });
            }

        </script>
</body>
</html>

