@model XBCAD7319_SparkLine_HR_WebApp.Models.PerformanceReview

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Performance</title>

    <!-- External Styles and Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="~/css/employee-details.css" />
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>

    <!-- Header Section -->
    <div class="header">
        <div class="logo-container">
            <div class="hr-logo"></div>
        </div>
        <h2 class="welcome-text">Performance Reviews</h2>
        <h2 class="heading">SparkLine</h2>
    </div>

    <div class="content-wrapper">
        <!-- Sidebar Container -->
        <div class="sidebar-container">
            <div class="sidebar">
                <h2>Performance</h2>
                <ul class="sidebar-menu">
                    <li><a asp-controller="Home" asp-action="MainDashboard">Dashboard</a></li>
                    <li><a asp-controller="Employee" asp-action="Management">Employee Management</a></li>
                    <li><a asp-controller="Attendance" asp-action="Index">Requests</a></li>
                    <li><a asp-controller="Analytics" asp-action="Index">Analytics</a></li>
                    <li><a asp-controller="Employee" asp-action="Details">Onboarding</a></li>
                    <li><a asp-controller="PerformanceReviews" asp-action="CreateReview">Performance</a></li>
                    <li><a href="#" onclick="confirmLogout()">Logout</a></li>
                </ul>
            </div>
        </div>

        <!-- Tabs -->
        <div class="main-content">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" id="create-review-tab" data-bs-toggle="tab" href="#create-review" role="tab" aria-controls="create-review" aria-selected="true">Create Review</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="view-reviews-tab" data-bs-toggle="tab" href="#view-reviews" role="tab" aria-controls="view-reviews" aria-selected="false">View Past Reviews</a>
                </li>
                <!-- New Tabs for Training -->
                <li class="nav-item">
                    <a class="nav-link" id="create-training-tab" data-bs-toggle="tab" href="#create-training" role="tab" aria-controls="create-training" aria-selected="false">Create Training</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="view-trainings-tab" data-bs-toggle="tab" href="#view-trainings" role="tab" aria-controls="view-trainings" aria-selected="false">View Past Trainings</a>
                </li>
            </ul>

            <div class="tab-content mt-3">
                <!-- Create Review Tab -->
                <div class="tab-pane fade show active" id="create-review" role="tabpanel" aria-labelledby="create-review-tab">
                    <div class="card">
                        <div class="card-header">Create Review</div>
                        <div class="card-body">
                            <form id="reviewsubmit" method="post">
                                <!-- Employee Dropdown -->
                                <div class="form-group-employee-list">
                                    <label for="EmployeeName">Employee</label>
                                    <select name="EmployeeNumber" class="form-control">
                                        <option value="">Select Employee</option>
                                        @foreach (var employee in ViewData["EmployeeList"] as List<SelectListItem>)
                                        {
                                            <option value="@employee.Value">@employee.Text  (@employee.Value)</option>
                                        }
                                    </select>

                                </div>

                                <!-- Review Date (Editable) -->
                                <div class="form-group">
                                    <label for="ReviewDate">Review Date</label>
                                    <input asp-for="ReviewDate" name="ReviewDate" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                </div>

                                <!-- Performance Rating -->
                                <div class="form-group">
                                    <label for="PerformanceRating">Performance Rating</label>
                                    <select asp-for="PerformanceRating" name="PerformanceRating" class="form-control">
                                        <option value="Excellent">Excellent</option>
                                        <option value="Good">Good</option>
                                        <option value="Satisfactory">Satisfactory</option>
                                        <option value="Needs Improvement">Needs Improvement</option>
                                    </select>
                                </div>

                                <!-- Feedback Section -->
                                <div class="form-group">
                                    <label for="Feedback">Feedback</label>
                                    <textarea asp-for="Feedback" name="Feedback" class="form-control" rows="4" placeholder="Provide feedback..."></textarea>
                                </div>

                                <!-- Save Review Button -->
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">Save And Submit Review To Employee</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- View Past Reviews Tab -->
                <div class="tab-pane fade" id="view-reviews" role="tabpanel" aria-labelledby="view-reviews-tab">
                    <div class="card">
                        <div class="card-header">View Past Reviews</div>
                        <div class="card-body">
                            <div class="form-group">
                                <label for="searchTerm">Search Employee Reviews</label>
                                <input type="text" id="searchTerm" class="form-control" placeholder="Enter employee name..." />
                            </div>
                            <div class="form-group">
                                <button type="button" class="btn btn-secondary" onclick="searchReviews()">Search</button>
                                <button type="button" class="btn btn-light" onclick="clearSearch()">Clear</button>
                            </div>

                            <div class="table-container">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th class="employee-column">Employee</th>
                                            <th class="date-column">Review Date</th>
                                            <th class="rating-column">Performance Rating</th>
                                            <th class="feedback-column">Feedback</th>
                                        </tr>
                                    </thead>
                                    <tbody id="reviewTableBody">
                                        @*  @foreach (var review in XBCAD7319_SparkLine_HR_WebApp.Models.PerformanceReview.PastReviews)
                                        {
                                        <tr>
                                        <td class="employee-column">@review.EmployeeName</td>
                                        <td class="date-column">@review.ReviewDate.ToString("yyyy-MM-dd")</td>
                                        <td class="rating-column">@review.PerformanceRating</td>
                                        <td class="feedback-column">@review.Feedback</td>
                                        </tr>
                                        } *@
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Create Training Tab -->
                <div class="tab-pane fade" id="create-training" role="tabpanel" aria-labelledby="create-training-tab">
                    <div class="card">
                        <div class="card-header">Create Training</div>
                        <div class="card-body">
                            <form id="trainingsubmit" method="post">
                                <!-- Select Employee Dropdown -->
                                <div class="form-group">
                                    <label for="EmployeeName">Select Employee</label>
                                    <select name="EmployeeNumber" class="form-control">
                                        <option value="">Select Employee</option>
                                        @foreach (var employee in ViewData["EmployeeList"] as List<SelectListItem>)
                                        {
                                            <option value="@employee.Value">@employee.Text  (@employee.Value)</option>
                                        }
                                    </select>
                                </div>

                                <!-- Course Name -->
                                <div class="form-group">
                                    <label for="CourseName">Course Name</label>
                                    <input type="text" id="CourseName" class="form-control" name="CourseName" placeholder="Enter course name" />
                                </div>

                                <!-- Add Course Link -->
                                <div class="form-group">
                                    <label for="CourseLink">Add Course Link</label>
                                    <input type="text" id="CourseLink" class="form-control" name="CourseLink" placeholder="Enter course link" />
                                </div>

                                <!-- Completion Date -->
                                <div class="form-group">
                                    <label for="CompletionDate">Completion Date</label>
                                    <input type="date" id="CompletionDate" class="form-control" name="CompletionDate" />
                                </div>

                                <!-- Submit Button -->
                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">Submit Training</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- View Past Trainings Tab -->
                <div class="tab-pane fade" id="view-trainings" role="tabpanel" aria-labelledby="view-trainings-tab">
                    <div class="card">
                        <div class="card-header">View Past Trainings</div>
                        <div class="card-body">
                            <div class="table-container">
                                <table class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th class="employee-column">Employee</th>
                                            <th class="name-column">Course Name</th>
                                            <th class="link-column">Course Link</th>
                                            <th class="date-column">Completion Date</th>
                                        </tr>
                                    </thead>
                                    <tbody id="trainingTableBody">
                                        @*  @foreach (var training in (List<XBCAD7319_SparkLine_HR_WebApp.Models.Training>)ViewData["Trainings"])
                                        {
                                        <tr>
                                        <td>@training.EmployeeName</td>
                                        <td>@(training.Status ? "Completed" : "Incomplete")</td>
                                        <td><a href="@training.CourseLink" target="_blank">View Document</a></td>
                                        <td>@training.CompletionDate.ToString("yyyy-MM-dd")</td>
                                        </tr>
                                        } *@
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>

    <style>
        .container {
            max-width: 1000px; /* Wider container */
            margin: 0 auto;
            background-color: white;
        }

        .content-wrapper {
            display: flex;
            flex-direction: column;
        }

        .form-group-employee-list {
            margin-bottom: 10px;
            margin-left: 10px;
            margin-right: 10px;
        }

        .form-group {
            margin-bottom: 10px;
            margin-left: 10px;
            margin-right: 10px
        }

        label {
            margin-bottom: 0.5rem;
        }

        /* Table Styles */
        .table-container {
            margin-left: 10px;
            margin-right: 10px;
        }

        .table-bordered {
            width: 100%;
            border: 1px solid #ddd;
            border-collapse: collapse;
        }

            .table-bordered th, .table-bordered td {
                border: 1px solid #ddd;
                padding: 8px;
                text-align: left;
            }

            .table-bordered th {
                background-color: white;
            }

        /* Column widths */
        .employee-column {
            width: 15%;
        }

        .date-column {
            width: 15%;
        }

        .rating-column {
            width: 20%;
        }

        .feedback-column {
            width: 25%;
        }
    </style>

    <script>
        // Search reviews function
        function searchReviews() {
            var searchTerm = document.getElementById("searchTerm").value;
            if (searchTerm) {
                // Modify the action to filter reviews based on search term
                window.location.href = '/PerformanceReviews/Index?searchTerm=' + searchTerm;
            }
        }

        //Method for logout button
        function confirmLogout() {
            if (confirm("Are you sure you want to log out?")) {
                window.location.href = '@Url.Action("Logout", "Account")'; // Adjust this path as needed
            }
        }

        function clearSearch() {
            document.getElementById("searchTerm").value = "";
            searchReviews();
        }

        // Example script to dynamically add new training entries (could be server-side, or handled by JavaScript)
        function addTrainingRow(trainingData) {
            let tableBody = document.getElementById("trainingTableBody");
            let newRow = tableBody.insertRow();
            newRow.innerHTML = `
                                <td>${trainingData.EmployeeName}</td>
                                <td>${trainingData.Status ? "Complete" : "Incomplete"}</td>
                                <td><a href="${trainingData.CourseLink}" target="_blank">View Document</a></td>
                                <td>${trainingData.CompletionDate}</td>
                            `;
        }

        // Attach the submit event to the form
        $('#reviewsubmit').submit(function (e) {
            e.preventDefault(); // Prevent the default form submission

            var formData = $(this).serialize(); // Serialize the form data for submission

            // Send the form data to the server via AJAX
            $.ajax({
                url: '@Url.Action("SubmitReviewAJAX", "PerformanceReviews")', // URL of the controller action
                type: 'POST', // Use POST method
                data: formData, // The serialized form data
                success: function (response) {
                    if (response.success) {
                        // Show a success message
                        alert('Review submitted successfully!');

                        // Clear the form
                        $('#reviewsubmit')[0].reset();
                    } else {
                        // Show an error message
                        alert('Error: ' + response.message);
                    }
                },
                error: function () {
                    // Handle AJAX request errors
                    alert('An error occurred while saving the data.');
                }
            });
        });

        function fetchReviews() {
            const tableBody = document.getElementById('reviewTableBody');
            tableBody.innerHTML = ''; // Clear the table

            $.ajax({
                url: '@Url.Action("GetPastReviews", "PerformanceReviews")', // Controller action URL
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        const reviews = response.data; // Data received from the server
                        reviews.forEach((review) => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                        <td class="employee-column">${review.employeeNumber || 'N/A'}</td> <!-- Use lowercase keys -->
                                        <td class="date-column">${review.reviewDate || 'N/A'}</td>
                                        <td class="rating-column">${review.performanceRating || 'N/A'}</td>
                                        <td class="feedback-column">${review.feedback || 'N/A'}</td>
                                    `;
                            tableBody.appendChild(row);
                        });
                    } else {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                                    <td colspan="4" class="text-center">No reviews found.</td>
                                `;
                        tableBody.appendChild(row);
                    }
                },
                error: function () {
                    alert('Error fetching reviews. Please try again later.');
                }
            });
        }

        $(document).ready(function () {
            if ($('#view-trainings').hasClass('active')) {
                fetchTraining(); // Call the function if the tab is active on page load
            }

            $('#view-trainings-tab').on('shown.bs.tab', function () {
                fetchTraining(); // Call the function when the tab is activated
            });
        });

        $(document).ready(function () {
            if ($('#view-reviews').hasClass('active')) {
                fetchReviews(); // Call the function if the tab is active on page load
            }

            $('#view-reviews-tab').on('shown.bs.tab', function () {
                fetchReviews(); // Call the function when the tab is activated
            });
        });

        // Search functionality
        function searchReviews() {
            const searchTerm = document.getElementById('searchTerm').value.trim().toLowerCase();
            const tableRows = document.querySelectorAll('#reviewTableBody tr');

            tableRows.forEach((row) => {
                const employeeName = row.querySelector('.employee-column').textContent.toLowerCase();
                if (employeeName.includes(searchTerm)) {
                    row.style.display = ''; // Show row
                } else {
                    row.style.display = 'none'; // Hide row
                }
            });
        }

        // Clear search filter
        function clearSearch() {
            document.getElementById('searchTerm').value = ''; // Clear the search input
            const tableRows = document.querySelectorAll('#reviewTableBody tr');
            tableRows.forEach((row) => {
                row.style.display = ''; // Show all rows
            });
        }

        // Fetch reviews on page load
        document.addEventListener('DOMContentLoaded', fetchReviews);

        // Attach the submit event to the form
        $('#trainingsubmit').submit(function (e) {
            e.preventDefault(); // Prevent the default form submission

            var formData = $(this).serialize(); // Serialize the form data for submission

            // Send the form data to the server via AJAX
            $.ajax({
                url: '@Url.Action("SubmitTrainingAJAX", "PerformanceReviews")', // URL of the controller action
                type: 'POST', // Use POST method
                data: formData, // The serialized form data
                success: function (response) {
                    if (response.success) {
                        // Show a success message
                        alert('Training submitted successfully!');

                        // Clear the form
                        //$('#reviewsubmit')[0].reset();
                    } else {
                        // Show an error message
                        alert('Error: ' + response.message);
                    }
                },
                error: function () {
                    // Handle AJAX request errors
                    alert('An error occurred while saving the data.');
                }
            });
        });

        function fetchTraining() {
            const tableBody = document.getElementById('trainingTableBody');
            tableBody.innerHTML = ''; // Clear the table

            $.ajax({
                url: '@Url.Action("GetPastTrainings", "PerformanceReviews")', // Controller action URL
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        const trainings = response.data; // Data received from the server
                        trainings.forEach((training) => {
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                <td class="employee-column">${training.employeeNumber || 'N/A'}</td>
                                <td class="name-column">${training.courseName || 'N/A'}</td>
                                <td class="link-column"><a href="${training.courseLink || '#'}" target="_blank">View Course</a></td>
                                <td class="date-column">${training.completionDate || 'N/A'}</td>
                            `;
                            tableBody.appendChild(row);
                        });
                    } else {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td colspan="4" class="text-center">No training found.</td>
                        `;
                        tableBody.appendChild(row);
                    }
                },
                error: function () {
                    alert('Error fetching trainings. Please try again later.');
                }
            });
        }


    </script>
</body>
</html>
